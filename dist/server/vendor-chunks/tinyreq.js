"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tinyreq";
exports.ids = ["vendor-chunks/tinyreq"];
exports.modules = {

/***/ "(rsc)/./node_modules/tinyreq/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/tinyreq/lib/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar http = (__webpack_require__(/*! follow-redirects */ \"(rsc)/./node_modules/follow-redirects/index.js\").http),\n    https = (__webpack_require__(/*! follow-redirects */ \"(rsc)/./node_modules/follow-redirects/index.js\").https),\n    ul = __webpack_require__(/*! ul */ \"(rsc)/./node_modules/ul/lib/index.js\"),\n    url = __webpack_require__(/*! url */ \"url\"),\n    queryString = __webpack_require__(/*! querystring */ \"querystring\"),\n    events = __webpack_require__(/*! events */ \"events\"),\n    EventEmitter = events.EventEmitter,\n    assured = __webpack_require__(/*! assured */ \"(rsc)/./node_modules/assured/lib/index.js\"),\n    noop = __webpack_require__(/*! noop6 */ \"(rsc)/./node_modules/noop6/lib/index.js\"),\n    zlib = __webpack_require__(/*! zlib */ \"zlib\");\n\n/**\n * tinyreq\n * Creates http(s) requests.\n *\n * @name tinyreq\n * @function\n * @param {String|Object} options A string being the request url or an object containing the following fields:\n *\n *  - `url` (String): The request url.\n *  - `method` (String): The request method.\n *  - `data` (Object): The request POST data.\n *  - `encoding` (String): The response encoding type.\n *  - `data_encoding` (String): The request encoding type.\n *\n * @param {Function} callback The callback function called (with `error` and `data` parameters).\n * @return {EventEmitter} An event emitter you can use for listening for the `data`, `error` and `end` events.\n */\nmodule.exports = function tinyreq(options, callback) {\n\n    // Handle options as string\n    if (typeof options === \"string\") {\n        options = {\n            url: options\n        };\n    }\n\n    // Merge options\n    options = ul.deepMerge(options, ul.clone(url.parse(options.url)), {\n        method: options.method ? options.method : options.data ? \"POST\" : \"GET\",\n        headers: {},\n        encoding: \"utf8\"\n    });\n\n    var _done = false;\n\n    // Unique callback\n    var opt_callback = assured(function (err, data, res) {\n        if (_done) {\n            return;\n        }\n        _done = true;\n        if (typeof callback !== \"function\") {\n            return;\n        }\n        callback(err, data, res);\n    });\n\n    // Handle post data\n    if (options.data && options.data.constructor === Object) {\n        options.data = queryString.stringify(options.data);\n    }\n\n    if (typeof options.data === \"string\") {\n        options.headers[\"Content-Length\"] = Buffer.byteLength(options.data);\n    }\n\n    var str = new EventEmitter();\n\n    // Create the request\n    var request = (options.protocol === \"http:\" ? http : https).request(options, function (res) {\n        var body = [],\n            bodyLength = 0;\n\n        var isGzipped = res.headers[\"content-encoding\"] === \"gzip\";\n\n        var resStream = res;\n        if (isGzipped) {\n            resStream = res.pipe(zlib.createGunzip());\n        } else {\n            options.encoding && res.setEncoding(options.encoding);\n        }\n\n        if (typeof callback === \"function\") {\n            resStream.on(\"data\", function (data) {\n                body.push(data);\n                bodyLength += data.length;\n            });\n        }\n\n        resStream.on(\"data\", function (data) {\n            str.emit(\"data\", data);\n        }).on(\"error\", function (e) {\n            str.emit(\"error\", e);\n            opt_callback(e, null, res);\n        }).on(\"end\", function () {\n            str.emit(\"end\");\n            body = options.encoding === null || options.encoding === \"buffer\" ? Buffer.concat(body, bodyLength) : body.join(\"\");\n            opt_callback(null, body, res);\n        });\n    }).on(\"error\", function (e) {\n        opt_callback(e, null, null);\n    });\n\n    // Handle post data\n    if (options.data) {\n        request.write(options.data, options.data_encoding);\n    }\n\n    request.end();\n    str.then = function (fn) {\n        callback = callback || noop;\n        return opt_callback._.then(fn);\n    };\n    str.catch = opt_callback._.catch.bind(opt_callback._);\n    return str;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdGlueXJlcS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsV0FBVyxvR0FBZ0M7QUFDM0MsWUFBWSxxR0FBaUM7QUFDN0MsU0FBUyxtQkFBTyxDQUFDLGdEQUFJO0FBQ3JCLFVBQVUsbUJBQU8sQ0FBQyxnQkFBSztBQUN2QixrQkFBa0IsbUJBQU8sQ0FBQyxnQ0FBYTtBQUN2QyxhQUFhLG1CQUFPLENBQUMsc0JBQVE7QUFDN0I7QUFDQSxjQUFjLG1CQUFPLENBQUMsMERBQVM7QUFDL0IsV0FBVyxtQkFBTyxDQUFDLHNEQUFPO0FBQzFCLFdBQVcsbUJBQU8sQ0FBQyxrQkFBTTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFlBQVksY0FBYztBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxLQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi9ub2RlX21vZHVsZXMvdGlueXJlcS9saWIvaW5kZXguanM/NWQyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGh0dHAgPSByZXF1aXJlKCdmb2xsb3ctcmVkaXJlY3RzJykuaHR0cCxcbiAgICBodHRwcyA9IHJlcXVpcmUoJ2ZvbGxvdy1yZWRpcmVjdHMnKS5odHRwcyxcbiAgICB1bCA9IHJlcXVpcmUoXCJ1bFwiKSxcbiAgICB1cmwgPSByZXF1aXJlKFwidXJsXCIpLFxuICAgIHF1ZXJ5U3RyaW5nID0gcmVxdWlyZShcInF1ZXJ5c3RyaW5nXCIpLFxuICAgIGV2ZW50cyA9IHJlcXVpcmUoXCJldmVudHNcIiksXG4gICAgRXZlbnRFbWl0dGVyID0gZXZlbnRzLkV2ZW50RW1pdHRlcixcbiAgICBhc3N1cmVkID0gcmVxdWlyZShcImFzc3VyZWRcIiksXG4gICAgbm9vcCA9IHJlcXVpcmUoXCJub29wNlwiKSxcbiAgICB6bGliID0gcmVxdWlyZShcInpsaWJcIik7XG5cbi8qKlxuICogdGlueXJlcVxuICogQ3JlYXRlcyBodHRwKHMpIHJlcXVlc3RzLlxuICpcbiAqIEBuYW1lIHRpbnlyZXFcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtTdHJpbmd8T2JqZWN0fSBvcHRpb25zIEEgc3RyaW5nIGJlaW5nIHRoZSByZXF1ZXN0IHVybCBvciBhbiBvYmplY3QgY29udGFpbmluZyB0aGUgZm9sbG93aW5nIGZpZWxkczpcbiAqXG4gKiAgLSBgdXJsYCAoU3RyaW5nKTogVGhlIHJlcXVlc3QgdXJsLlxuICogIC0gYG1ldGhvZGAgKFN0cmluZyk6IFRoZSByZXF1ZXN0IG1ldGhvZC5cbiAqICAtIGBkYXRhYCAoT2JqZWN0KTogVGhlIHJlcXVlc3QgUE9TVCBkYXRhLlxuICogIC0gYGVuY29kaW5nYCAoU3RyaW5nKTogVGhlIHJlc3BvbnNlIGVuY29kaW5nIHR5cGUuXG4gKiAgLSBgZGF0YV9lbmNvZGluZ2AgKFN0cmluZyk6IFRoZSByZXF1ZXN0IGVuY29kaW5nIHR5cGUuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIGNhbGxlZCAod2l0aCBgZXJyb3JgIGFuZCBgZGF0YWAgcGFyYW1ldGVycykuXG4gKiBAcmV0dXJuIHtFdmVudEVtaXR0ZXJ9IEFuIGV2ZW50IGVtaXR0ZXIgeW91IGNhbiB1c2UgZm9yIGxpc3RlbmluZyBmb3IgdGhlIGBkYXRhYCwgYGVycm9yYCBhbmQgYGVuZGAgZXZlbnRzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHRpbnlyZXEob3B0aW9ucywgY2FsbGJhY2spIHtcblxuICAgIC8vIEhhbmRsZSBvcHRpb25zIGFzIHN0cmluZ1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgdXJsOiBvcHRpb25zXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gTWVyZ2Ugb3B0aW9uc1xuICAgIG9wdGlvbnMgPSB1bC5kZWVwTWVyZ2Uob3B0aW9ucywgdWwuY2xvbmUodXJsLnBhcnNlKG9wdGlvbnMudXJsKSksIHtcbiAgICAgICAgbWV0aG9kOiBvcHRpb25zLm1ldGhvZCA/IG9wdGlvbnMubWV0aG9kIDogb3B0aW9ucy5kYXRhID8gXCJQT1NUXCIgOiBcIkdFVFwiLFxuICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgZW5jb2Rpbmc6IFwidXRmOFwiXG4gICAgfSk7XG5cbiAgICB2YXIgX2RvbmUgPSBmYWxzZTtcblxuICAgIC8vIFVuaXF1ZSBjYWxsYmFja1xuICAgIHZhciBvcHRfY2FsbGJhY2sgPSBhc3N1cmVkKGZ1bmN0aW9uIChlcnIsIGRhdGEsIHJlcykge1xuICAgICAgICBpZiAoX2RvbmUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBfZG9uZSA9IHRydWU7XG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNhbGxiYWNrKGVyciwgZGF0YSwgcmVzKTtcbiAgICB9KTtcblxuICAgIC8vIEhhbmRsZSBwb3N0IGRhdGFcbiAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuZGF0YS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSB7XG4gICAgICAgIG9wdGlvbnMuZGF0YSA9IHF1ZXJ5U3RyaW5nLnN0cmluZ2lmeShvcHRpb25zLmRhdGEpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5kYXRhID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIG9wdGlvbnMuaGVhZGVyc1tcIkNvbnRlbnQtTGVuZ3RoXCJdID0gQnVmZmVyLmJ5dGVMZW5ndGgob3B0aW9ucy5kYXRhKTtcbiAgICB9XG5cbiAgICB2YXIgc3RyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgLy8gQ3JlYXRlIHRoZSByZXF1ZXN0XG4gICAgdmFyIHJlcXVlc3QgPSAob3B0aW9ucy5wcm90b2NvbCA9PT0gXCJodHRwOlwiID8gaHR0cCA6IGh0dHBzKS5yZXF1ZXN0KG9wdGlvbnMsIGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgdmFyIGJvZHkgPSBbXSxcbiAgICAgICAgICAgIGJvZHlMZW5ndGggPSAwO1xuXG4gICAgICAgIHZhciBpc0d6aXBwZWQgPSByZXMuaGVhZGVyc1tcImNvbnRlbnQtZW5jb2RpbmdcIl0gPT09IFwiZ3ppcFwiO1xuXG4gICAgICAgIHZhciByZXNTdHJlYW0gPSByZXM7XG4gICAgICAgIGlmIChpc0d6aXBwZWQpIHtcbiAgICAgICAgICAgIHJlc1N0cmVhbSA9IHJlcy5waXBlKHpsaWIuY3JlYXRlR3VuemlwKCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgb3B0aW9ucy5lbmNvZGluZyAmJiByZXMuc2V0RW5jb2Rpbmcob3B0aW9ucy5lbmNvZGluZyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJlc1N0cmVhbS5vbihcImRhdGFcIiwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBib2R5LnB1c2goZGF0YSk7XG4gICAgICAgICAgICAgICAgYm9keUxlbmd0aCArPSBkYXRhLmxlbmd0aDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzU3RyZWFtLm9uKFwiZGF0YVwiLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgc3RyLmVtaXQoXCJkYXRhXCIsIGRhdGEpO1xuICAgICAgICB9KS5vbihcImVycm9yXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBzdHIuZW1pdChcImVycm9yXCIsIGUpO1xuICAgICAgICAgICAgb3B0X2NhbGxiYWNrKGUsIG51bGwsIHJlcyk7XG4gICAgICAgIH0pLm9uKFwiZW5kXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHN0ci5lbWl0KFwiZW5kXCIpO1xuICAgICAgICAgICAgYm9keSA9IG9wdGlvbnMuZW5jb2RpbmcgPT09IG51bGwgfHwgb3B0aW9ucy5lbmNvZGluZyA9PT0gXCJidWZmZXJcIiA/IEJ1ZmZlci5jb25jYXQoYm9keSwgYm9keUxlbmd0aCkgOiBib2R5LmpvaW4oXCJcIik7XG4gICAgICAgICAgICBvcHRfY2FsbGJhY2sobnVsbCwgYm9keSwgcmVzKTtcbiAgICAgICAgfSk7XG4gICAgfSkub24oXCJlcnJvclwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICBvcHRfY2FsbGJhY2soZSwgbnVsbCwgbnVsbCk7XG4gICAgfSk7XG5cbiAgICAvLyBIYW5kbGUgcG9zdCBkYXRhXG4gICAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgICAgICByZXF1ZXN0LndyaXRlKG9wdGlvbnMuZGF0YSwgb3B0aW9ucy5kYXRhX2VuY29kaW5nKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0LmVuZCgpO1xuICAgIHN0ci50aGVuID0gZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgfHwgbm9vcDtcbiAgICAgICAgcmV0dXJuIG9wdF9jYWxsYmFjay5fLnRoZW4oZm4pO1xuICAgIH07XG4gICAgc3RyLmNhdGNoID0gb3B0X2NhbGxiYWNrLl8uY2F0Y2guYmluZChvcHRfY2FsbGJhY2suXyk7XG4gICAgcmV0dXJuIHN0cjtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/tinyreq/lib/index.js\n");

/***/ })

};
;